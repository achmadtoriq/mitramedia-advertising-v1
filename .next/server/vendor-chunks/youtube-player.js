"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/youtube-player";
exports.ids = ["vendor-chunks/youtube-player"];
exports.modules = {

/***/ "(ssr)/./node_modules/youtube-player/dist/FunctionStateMap.js":
/*!**************************************************************!*\
  !*** ./node_modules/youtube-player/dist/FunctionStateMap.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _PlayerStates = __webpack_require__(/*! ./constants/PlayerStates */ \"(ssr)/./node_modules/youtube-player/dist/constants/PlayerStates.js\");\nvar _PlayerStates2 = _interopRequireDefault(_PlayerStates);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nexports[\"default\"] = {\n    pauseVideo: {\n        acceptableStates: [\n            _PlayerStates2.default.ENDED,\n            _PlayerStates2.default.PAUSED\n        ],\n        stateChangeRequired: false\n    },\n    playVideo: {\n        acceptableStates: [\n            _PlayerStates2.default.ENDED,\n            _PlayerStates2.default.PLAYING\n        ],\n        stateChangeRequired: false\n    },\n    seekTo: {\n        acceptableStates: [\n            _PlayerStates2.default.ENDED,\n            _PlayerStates2.default.PLAYING,\n            _PlayerStates2.default.PAUSED\n        ],\n        stateChangeRequired: true,\n        // TRICKY: `seekTo` may not cause a state change if no buffering is\n        // required.\n        timeout: 3000\n    }\n};\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9GdW5jdGlvblN0YXRlTWFwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUVGLElBQUlDLGdCQUFnQkMsbUJBQU9BLENBQUM7QUFFNUIsSUFBSUMsaUJBQWlCQyx1QkFBdUJIO0FBRTVDLFNBQVNHLHVCQUF1QkMsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlDLFVBQVUsR0FBR0QsTUFBTTtRQUFFRSxTQUFTRjtJQUFJO0FBQUc7QUFFOUZOLGtCQUFlLEdBQUc7SUFDaEJTLFlBQVk7UUFDVkMsa0JBQWtCO1lBQUNOLGVBQWVJLE9BQU8sQ0FBQ0csS0FBSztZQUFFUCxlQUFlSSxPQUFPLENBQUNJLE1BQU07U0FBQztRQUMvRUMscUJBQXFCO0lBQ3ZCO0lBQ0FDLFdBQVc7UUFDVEosa0JBQWtCO1lBQUNOLGVBQWVJLE9BQU8sQ0FBQ0csS0FBSztZQUFFUCxlQUFlSSxPQUFPLENBQUNPLE9BQU87U0FBQztRQUNoRkYscUJBQXFCO0lBQ3ZCO0lBQ0FHLFFBQVE7UUFDTk4sa0JBQWtCO1lBQUNOLGVBQWVJLE9BQU8sQ0FBQ0csS0FBSztZQUFFUCxlQUFlSSxPQUFPLENBQUNPLE9BQU87WUFBRVgsZUFBZUksT0FBTyxDQUFDSSxNQUFNO1NBQUM7UUFDL0dDLHFCQUFxQjtRQUVyQixtRUFBbUU7UUFDbkUsWUFBWTtRQUNaSSxTQUFTO0lBQ1g7QUFDRjtBQUNBQyxPQUFPbEIsT0FBTyxHQUFHQSxPQUFPLENBQUMsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL21pdHJhbWVkaWFfYWR2ZXJ0aXNpbmcvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9GdW5jdGlvblN0YXRlTWFwLmpzP2Y0MGYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX1BsYXllclN0YXRlcyA9IHJlcXVpcmUoJy4vY29uc3RhbnRzL1BsYXllclN0YXRlcycpO1xuXG52YXIgX1BsYXllclN0YXRlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9QbGF5ZXJTdGF0ZXMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIHBhdXNlVmlkZW86IHtcbiAgICBhY2NlcHRhYmxlU3RhdGVzOiBbX1BsYXllclN0YXRlczIuZGVmYXVsdC5FTkRFRCwgX1BsYXllclN0YXRlczIuZGVmYXVsdC5QQVVTRURdLFxuICAgIHN0YXRlQ2hhbmdlUmVxdWlyZWQ6IGZhbHNlXG4gIH0sXG4gIHBsYXlWaWRlbzoge1xuICAgIGFjY2VwdGFibGVTdGF0ZXM6IFtfUGxheWVyU3RhdGVzMi5kZWZhdWx0LkVOREVELCBfUGxheWVyU3RhdGVzMi5kZWZhdWx0LlBMQVlJTkddLFxuICAgIHN0YXRlQ2hhbmdlUmVxdWlyZWQ6IGZhbHNlXG4gIH0sXG4gIHNlZWtUbzoge1xuICAgIGFjY2VwdGFibGVTdGF0ZXM6IFtfUGxheWVyU3RhdGVzMi5kZWZhdWx0LkVOREVELCBfUGxheWVyU3RhdGVzMi5kZWZhdWx0LlBMQVlJTkcsIF9QbGF5ZXJTdGF0ZXMyLmRlZmF1bHQuUEFVU0VEXSxcbiAgICBzdGF0ZUNoYW5nZVJlcXVpcmVkOiB0cnVlLFxuXG4gICAgLy8gVFJJQ0tZOiBgc2Vla1RvYCBtYXkgbm90IGNhdXNlIGEgc3RhdGUgY2hhbmdlIGlmIG5vIGJ1ZmZlcmluZyBpc1xuICAgIC8vIHJlcXVpcmVkLlxuICAgIHRpbWVvdXQ6IDMwMDBcbiAgfVxufTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9QbGF5ZXJTdGF0ZXMiLCJyZXF1aXJlIiwiX1BsYXllclN0YXRlczIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJwYXVzZVZpZGVvIiwiYWNjZXB0YWJsZVN0YXRlcyIsIkVOREVEIiwiUEFVU0VEIiwic3RhdGVDaGFuZ2VSZXF1aXJlZCIsInBsYXlWaWRlbyIsIlBMQVlJTkciLCJzZWVrVG8iLCJ0aW1lb3V0IiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/FunctionStateMap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/YouTubePlayer.js":
/*!***********************************************************!*\
  !*** ./node_modules/youtube-player/dist/YouTubePlayer.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _debug = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/index.js\");\nvar _debug2 = _interopRequireDefault(_debug);\nvar _functionNames = __webpack_require__(/*! ./functionNames */ \"(ssr)/./node_modules/youtube-player/dist/functionNames.js\");\nvar _functionNames2 = _interopRequireDefault(_functionNames);\nvar _eventNames = __webpack_require__(/*! ./eventNames */ \"(ssr)/./node_modules/youtube-player/dist/eventNames.js\");\nvar _eventNames2 = _interopRequireDefault(_eventNames);\nvar _FunctionStateMap = __webpack_require__(/*! ./FunctionStateMap */ \"(ssr)/./node_modules/youtube-player/dist/FunctionStateMap.js\");\nvar _FunctionStateMap2 = _interopRequireDefault(_FunctionStateMap);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/* eslint-disable promise/prefer-await-to-then */ var debug = (0, _debug2.default)(\"youtube-player\");\nvar YouTubePlayer = {};\n/**\n * Construct an object that defines an event handler for all of the YouTube\n * player events. Proxy captured events through an event emitter.\n *\n * @todo Capture event parameters.\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\n */ YouTubePlayer.proxyEvents = function(emitter) {\n    var events = {};\n    var _loop = function _loop(eventName) {\n        var onEventName = \"on\" + eventName.slice(0, 1).toUpperCase() + eventName.slice(1);\n        events[onEventName] = function(event) {\n            debug('event \"%s\"', onEventName, event);\n            emitter.trigger(eventName, event);\n        };\n    };\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n    try {\n        for(var _iterator = _eventNames2.default[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var eventName = _step.value;\n            _loop(eventName);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return events;\n};\n/**\n * Delays player API method execution until player state is ready.\n *\n * @todo Proxy all of the methods using Object.keys.\n * @todo See TRICKY below.\n * @param playerAPIReady Promise that resolves when player is ready.\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions.\n * @returns {Object}\n */ YouTubePlayer.promisifyPlayer = function(playerAPIReady) {\n    var strictState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var functions = {};\n    var _loop2 = function _loop2(functionName) {\n        if (strictState && _FunctionStateMap2.default[functionName]) {\n            functions[functionName] = function() {\n                for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                return playerAPIReady.then(function(player) {\n                    var stateInfo = _FunctionStateMap2.default[functionName];\n                    var playerState = player.getPlayerState();\n                    // eslint-disable-next-line no-warning-comments\n                    // TODO: Just spread the args into the function once Babel is fixed:\n                    // https://github.com/babel/babel/issues/4270\n                    //\n                    // eslint-disable-next-line prefer-spread\n                    var value = player[functionName].apply(player, args);\n                    // TRICKY: For functions like `seekTo`, a change in state must be\n                    // triggered given that the resulting state could match the initial\n                    // state.\n                    if (stateInfo.stateChangeRequired || // eslint-disable-next-line no-extra-parens\n                    Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerState) === -1) {\n                        return new Promise(function(resolve) {\n                            var onPlayerStateChange = function onPlayerStateChange() {\n                                var playerStateAfterChange = player.getPlayerState();\n                                var timeout = void 0;\n                                if (typeof stateInfo.timeout === \"number\") {\n                                    timeout = setTimeout(function() {\n                                        player.removeEventListener(\"onStateChange\", onPlayerStateChange);\n                                        resolve();\n                                    }, stateInfo.timeout);\n                                }\n                                if (Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerStateAfterChange) !== -1) {\n                                    player.removeEventListener(\"onStateChange\", onPlayerStateChange);\n                                    clearTimeout(timeout);\n                                    resolve();\n                                }\n                            };\n                            player.addEventListener(\"onStateChange\", onPlayerStateChange);\n                        }).then(function() {\n                            return value;\n                        });\n                    }\n                    return value;\n                });\n            };\n        } else {\n            functions[functionName] = function() {\n                for(var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n                    args[_key2] = arguments[_key2];\n                }\n                return playerAPIReady.then(function(player) {\n                    // eslint-disable-next-line no-warning-comments\n                    // TODO: Just spread the args into the function once Babel is fixed:\n                    // https://github.com/babel/babel/issues/4270\n                    //\n                    // eslint-disable-next-line prefer-spread\n                    return player[functionName].apply(player, args);\n                });\n            };\n        }\n    };\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n    try {\n        for(var _iterator2 = _functionNames2.default[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true){\n            var functionName = _step2.value;\n            _loop2(functionName);\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally{\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n    return functions;\n};\nexports[\"default\"] = YouTubePlayer;\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/YouTubePlayer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/constants/PlayerStates.js":
/*!********************************************************************!*\
  !*** ./node_modules/youtube-player/dist/constants/PlayerStates.js ***!
  \********************************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = {\n    BUFFERING: 3,\n    ENDED: 0,\n    PAUSED: 2,\n    PLAYING: 1,\n    UNSTARTED: -1,\n    VIDEO_CUED: 5\n};\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9jb25zdGFudHMvUGxheWVyU3RhdGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxrQkFBZSxHQUFHO0lBQ2hCRyxXQUFXO0lBQ1hDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxTQUFTO0lBQ1RDLFdBQVcsQ0FBQztJQUNaQyxZQUFZO0FBQ2Q7QUFDQUMsT0FBT1QsT0FBTyxHQUFHQSxPQUFPLENBQUMsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL21pdHJhbWVkaWFfYWR2ZXJ0aXNpbmcvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9jb25zdGFudHMvUGxheWVyU3RhdGVzLmpzPzQ5MjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIEJVRkZFUklORzogMyxcbiAgRU5ERUQ6IDAsXG4gIFBBVVNFRDogMixcbiAgUExBWUlORzogMSxcbiAgVU5TVEFSVEVEOiAtMSxcbiAgVklERU9fQ1VFRDogNVxufTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIkJVRkZFUklORyIsIkVOREVEIiwiUEFVU0VEIiwiUExBWUlORyIsIlVOU1RBUlRFRCIsIlZJREVPX0NVRUQiLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/constants/PlayerStates.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/eventNames.js":
/*!********************************************************!*\
  !*** ./node_modules/youtube-player/dist/eventNames.js ***!
  \********************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\n * `volumeChange` is not officially supported but seems to work\n * it emits an object: `{volume: 82.6923076923077, muted: false}`\n */ exports[\"default\"] = [\n    \"ready\",\n    \"stateChange\",\n    \"playbackQualityChange\",\n    \"playbackRateChange\",\n    \"error\",\n    \"apiChange\",\n    \"volumeChange\"\n];\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9ldmVudE5hbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUdGOzs7O0NBSUMsR0FDREQsa0JBQWUsR0FBRztJQUFDO0lBQVM7SUFBZTtJQUF5QjtJQUFzQjtJQUFTO0lBQWE7Q0FBZTtBQUMvSEcsT0FBT0gsT0FBTyxHQUFHQSxPQUFPLENBQUMsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL21pdHJhbWVkaWFfYWR2ZXJ0aXNpbmcvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9ldmVudE5hbWVzLmpzPzczZDYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG5cbi8qKlxuICogQHNlZSBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS95b3V0dWJlL2lmcmFtZV9hcGlfcmVmZXJlbmNlI0V2ZW50c1xuICogYHZvbHVtZUNoYW5nZWAgaXMgbm90IG9mZmljaWFsbHkgc3VwcG9ydGVkIGJ1dCBzZWVtcyB0byB3b3JrXG4gKiBpdCBlbWl0cyBhbiBvYmplY3Q6IGB7dm9sdW1lOiA4Mi42OTIzMDc2OTIzMDc3LCBtdXRlZDogZmFsc2V9YFxuICovXG5leHBvcnRzLmRlZmF1bHQgPSBbJ3JlYWR5JywgJ3N0YXRlQ2hhbmdlJywgJ3BsYXliYWNrUXVhbGl0eUNoYW5nZScsICdwbGF5YmFja1JhdGVDaGFuZ2UnLCAnZXJyb3InLCAnYXBpQ2hhbmdlJywgJ3ZvbHVtZUNoYW5nZSddO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/eventNames.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/functionNames.js":
/*!***********************************************************!*\
  !*** ./node_modules/youtube-player/dist/functionNames.js ***!
  \***********************************************************/
/***/ ((module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Functions\n */ exports[\"default\"] = [\n    \"cueVideoById\",\n    \"loadVideoById\",\n    \"cueVideoByUrl\",\n    \"loadVideoByUrl\",\n    \"playVideo\",\n    \"pauseVideo\",\n    \"stopVideo\",\n    \"getVideoLoadedFraction\",\n    \"cuePlaylist\",\n    \"loadPlaylist\",\n    \"nextVideo\",\n    \"previousVideo\",\n    \"playVideoAt\",\n    \"setShuffle\",\n    \"setLoop\",\n    \"getPlaylist\",\n    \"getPlaylistIndex\",\n    \"setOption\",\n    \"mute\",\n    \"unMute\",\n    \"isMuted\",\n    \"setVolume\",\n    \"getVolume\",\n    \"seekTo\",\n    \"getPlayerState\",\n    \"getPlaybackRate\",\n    \"setPlaybackRate\",\n    \"getAvailablePlaybackRates\",\n    \"getPlaybackQuality\",\n    \"setPlaybackQuality\",\n    \"getAvailableQualityLevels\",\n    \"getCurrentTime\",\n    \"getDuration\",\n    \"removeEventListener\",\n    \"getVideoUrl\",\n    \"getVideoEmbedCode\",\n    \"getOptions\",\n    \"getOption\",\n    \"addEventListener\",\n    \"destroy\",\n    \"setSize\",\n    \"getIframe\"\n];\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9mdW5jdGlvbk5hbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUdGOztDQUVDLEdBQ0RELGtCQUFlLEdBQUc7SUFBQztJQUFnQjtJQUFpQjtJQUFpQjtJQUFrQjtJQUFhO0lBQWM7SUFBYTtJQUEwQjtJQUFlO0lBQWdCO0lBQWE7SUFBaUI7SUFBZTtJQUFjO0lBQVc7SUFBZTtJQUFvQjtJQUFhO0lBQVE7SUFBVTtJQUFXO0lBQWE7SUFBYTtJQUFVO0lBQWtCO0lBQW1CO0lBQW1CO0lBQTZCO0lBQXNCO0lBQXNCO0lBQTZCO0lBQWtCO0lBQWU7SUFBdUI7SUFBZTtJQUFxQjtJQUFjO0lBQWE7SUFBb0I7SUFBVztJQUFXO0NBQVk7QUFDMXJCRyxPQUFPSCxPQUFPLEdBQUdBLE9BQU8sQ0FBQyxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWl0cmFtZWRpYV9hZHZlcnRpc2luZy8uL25vZGVfbW9kdWxlcy95b3V0dWJlLXBsYXllci9kaXN0L2Z1bmN0aW9uTmFtZXMuanM/NzYyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cblxuLyoqXG4gKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3lvdXR1YmUvaWZyYW1lX2FwaV9yZWZlcmVuY2UjRnVuY3Rpb25zXG4gKi9cbmV4cG9ydHMuZGVmYXVsdCA9IFsnY3VlVmlkZW9CeUlkJywgJ2xvYWRWaWRlb0J5SWQnLCAnY3VlVmlkZW9CeVVybCcsICdsb2FkVmlkZW9CeVVybCcsICdwbGF5VmlkZW8nLCAncGF1c2VWaWRlbycsICdzdG9wVmlkZW8nLCAnZ2V0VmlkZW9Mb2FkZWRGcmFjdGlvbicsICdjdWVQbGF5bGlzdCcsICdsb2FkUGxheWxpc3QnLCAnbmV4dFZpZGVvJywgJ3ByZXZpb3VzVmlkZW8nLCAncGxheVZpZGVvQXQnLCAnc2V0U2h1ZmZsZScsICdzZXRMb29wJywgJ2dldFBsYXlsaXN0JywgJ2dldFBsYXlsaXN0SW5kZXgnLCAnc2V0T3B0aW9uJywgJ211dGUnLCAndW5NdXRlJywgJ2lzTXV0ZWQnLCAnc2V0Vm9sdW1lJywgJ2dldFZvbHVtZScsICdzZWVrVG8nLCAnZ2V0UGxheWVyU3RhdGUnLCAnZ2V0UGxheWJhY2tSYXRlJywgJ3NldFBsYXliYWNrUmF0ZScsICdnZXRBdmFpbGFibGVQbGF5YmFja1JhdGVzJywgJ2dldFBsYXliYWNrUXVhbGl0eScsICdzZXRQbGF5YmFja1F1YWxpdHknLCAnZ2V0QXZhaWxhYmxlUXVhbGl0eUxldmVscycsICdnZXRDdXJyZW50VGltZScsICdnZXREdXJhdGlvbicsICdyZW1vdmVFdmVudExpc3RlbmVyJywgJ2dldFZpZGVvVXJsJywgJ2dldFZpZGVvRW1iZWRDb2RlJywgJ2dldE9wdGlvbnMnLCAnZ2V0T3B0aW9uJywgJ2FkZEV2ZW50TGlzdGVuZXInLCAnZGVzdHJveScsICdzZXRTaXplJywgJ2dldElmcmFtZSddO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/functionNames.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/youtube-player/dist/index.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n    return typeof obj;\n} : function(obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _sister = __webpack_require__(/*! sister */ \"(ssr)/./node_modules/sister/src/sister.js\");\nvar _sister2 = _interopRequireDefault(_sister);\nvar _loadYouTubeIframeApi = __webpack_require__(/*! ./loadYouTubeIframeApi */ \"(ssr)/./node_modules/youtube-player/dist/loadYouTubeIframeApi.js\");\nvar _loadYouTubeIframeApi2 = _interopRequireDefault(_loadYouTubeIframeApi);\nvar _YouTubePlayer = __webpack_require__(/*! ./YouTubePlayer */ \"(ssr)/./node_modules/youtube-player/dist/YouTubePlayer.js\");\nvar _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * @typedef YT.Player\n * @see https://developers.google.com/youtube/iframe_api_reference\n * */ /**\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n */ var youtubeIframeAPI = void 0;\n/**\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\n *\n * @param maybeElementId Either An existing YT.Player instance,\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\n * @param options See `options` (Ignored when using an existing YT.Player instance).\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions. Default: `false`.\n * See `FunctionStateMap.js` for supported functions and acceptable states.\n */ exports[\"default\"] = function(maybeElementId) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var strictState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var emitter = (0, _sister2.default)();\n    if (!youtubeIframeAPI) {\n        youtubeIframeAPI = (0, _loadYouTubeIframeApi2.default)(emitter);\n    }\n    if (options.events) {\n        throw new Error(\"Event handlers cannot be overwritten.\");\n    }\n    if (typeof maybeElementId === \"string\" && !document.getElementById(maybeElementId)) {\n        throw new Error('Element \"' + maybeElementId + '\" does not exist.');\n    }\n    options.events = _YouTubePlayer2.default.proxyEvents(emitter);\n    var playerAPIReady = new Promise(function(resolve) {\n        if ((typeof maybeElementId === \"undefined\" ? \"undefined\" : _typeof(maybeElementId)) === \"object\" && maybeElementId.playVideo instanceof Function) {\n            var player = maybeElementId;\n            resolve(player);\n        } else {\n            // asume maybeElementId can be rendered inside\n            // eslint-disable-next-line promise/catch-or-return\n            youtubeIframeAPI.then(function(YT) {\n                // eslint-disable-line promise/prefer-await-to-then\n                var player = new YT.Player(maybeElementId, options);\n                emitter.on(\"ready\", function() {\n                    resolve(player);\n                });\n                return null;\n            });\n        }\n    });\n    var playerApi = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady, strictState);\n    playerApi.on = emitter.on;\n    playerApi.off = emitter.off;\n    return playerApi;\n};\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFFRixJQUFJQyxVQUFVLE9BQU9DLFdBQVcsY0FBYyxPQUFPQSxPQUFPQyxRQUFRLEtBQUssV0FBVyxTQUFVQyxHQUFHO0lBQUksT0FBTyxPQUFPQTtBQUFLLElBQUksU0FBVUEsR0FBRztJQUFJLE9BQU9BLE9BQU8sT0FBT0YsV0FBVyxjQUFjRSxJQUFJQyxXQUFXLEtBQUtILFVBQVVFLFFBQVFGLE9BQU9JLFNBQVMsR0FBRyxXQUFXLE9BQU9GO0FBQUs7QUFFM1EsSUFBSUcsVUFBVUMsbUJBQU9BLENBQUM7QUFFdEIsSUFBSUMsV0FBV0MsdUJBQXVCSDtBQUV0QyxJQUFJSSx3QkFBd0JILG1CQUFPQSxDQUFDO0FBRXBDLElBQUlJLHlCQUF5QkYsdUJBQXVCQztBQUVwRCxJQUFJRSxpQkFBaUJMLG1CQUFPQSxDQUFDO0FBRTdCLElBQUlNLGtCQUFrQkosdUJBQXVCRztBQUU3QyxTQUFTSCx1QkFBdUJOLEdBQUc7SUFBSSxPQUFPQSxPQUFPQSxJQUFJVyxVQUFVLEdBQUdYLE1BQU07UUFBRVksU0FBU1o7SUFBSTtBQUFHO0FBRTlGOzs7R0FHRyxHQUVIOztDQUVDLEdBQ0QsSUFBSWEsbUJBQW1CLEtBQUs7QUFFNUI7Ozs7Ozs7OztDQVNDLEdBRURsQixrQkFBZSxHQUFHLFNBQVVtQixjQUFjO0lBQ3hDLElBQUlDLFVBQVVDLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHLENBQUM7SUFDbkYsSUFBSUcsY0FBY0gsVUFBVUMsTUFBTSxHQUFHLEtBQUtELFNBQVMsQ0FBQyxFQUFFLEtBQUtFLFlBQVlGLFNBQVMsQ0FBQyxFQUFFLEdBQUc7SUFFdEYsSUFBSUksVUFBVSxDQUFDLEdBQUdmLFNBQVNPLE9BQU87SUFFbEMsSUFBSSxDQUFDQyxrQkFBa0I7UUFDckJBLG1CQUFtQixDQUFDLEdBQUdMLHVCQUF1QkksT0FBTyxFQUFFUTtJQUN6RDtJQUVBLElBQUlMLFFBQVFNLE1BQU0sRUFBRTtRQUNsQixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFFQSxJQUFJLE9BQU9SLG1CQUFtQixZQUFZLENBQUNTLFNBQVNDLGNBQWMsQ0FBQ1YsaUJBQWlCO1FBQ2xGLE1BQU0sSUFBSVEsTUFBTSxjQUFjUixpQkFBaUI7SUFDakQ7SUFFQUMsUUFBUU0sTUFBTSxHQUFHWCxnQkFBZ0JFLE9BQU8sQ0FBQ2EsV0FBVyxDQUFDTDtJQUVyRCxJQUFJTSxpQkFBaUIsSUFBSUMsUUFBUSxTQUFVQyxPQUFPO1FBQ2hELElBQUksQ0FBQyxPQUFPZCxtQkFBbUIsY0FBYyxjQUFjakIsUUFBUWlCLGVBQWMsTUFBTyxZQUFZQSxlQUFlZSxTQUFTLFlBQVlDLFVBQVU7WUFDaEosSUFBSUMsU0FBU2pCO1lBRWJjLFFBQVFHO1FBQ1YsT0FBTztZQUNMLDhDQUE4QztZQUM5QyxtREFBbUQ7WUFDbkRsQixpQkFBaUJtQixJQUFJLENBQUMsU0FBVUMsRUFBRTtnQkFDaEMsbURBQW1EO2dCQUNuRCxJQUFJRixTQUFTLElBQUlFLEdBQUdDLE1BQU0sQ0FBQ3BCLGdCQUFnQkM7Z0JBRTNDSyxRQUFRZSxFQUFFLENBQUMsU0FBUztvQkFDbEJQLFFBQVFHO2dCQUNWO2dCQUVBLE9BQU87WUFDVDtRQUNGO0lBQ0Y7SUFFQSxJQUFJSyxZQUFZMUIsZ0JBQWdCRSxPQUFPLENBQUN5QixlQUFlLENBQUNYLGdCQUFnQlA7SUFFeEVpQixVQUFVRCxFQUFFLEdBQUdmLFFBQVFlLEVBQUU7SUFDekJDLFVBQVVFLEdBQUcsR0FBR2xCLFFBQVFrQixHQUFHO0lBRTNCLE9BQU9GO0FBQ1Q7QUFFQUcsT0FBTzVDLE9BQU8sR0FBR0EsT0FBTyxDQUFDLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXRyYW1lZGlhX2FkdmVydGlzaW5nLy4vbm9kZV9tb2R1bGVzL3lvdXR1YmUtcGxheWVyL2Rpc3QvaW5kZXguanM/OWI2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9zaXN0ZXIgPSByZXF1aXJlKCdzaXN0ZXInKTtcblxudmFyIF9zaXN0ZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2lzdGVyKTtcblxudmFyIF9sb2FkWW91VHViZUlmcmFtZUFwaSA9IHJlcXVpcmUoJy4vbG9hZFlvdVR1YmVJZnJhbWVBcGknKTtcblxudmFyIF9sb2FkWW91VHViZUlmcmFtZUFwaTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9sb2FkWW91VHViZUlmcmFtZUFwaSk7XG5cbnZhciBfWW91VHViZVBsYXllciA9IHJlcXVpcmUoJy4vWW91VHViZVBsYXllcicpO1xuXG52YXIgX1lvdVR1YmVQbGF5ZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfWW91VHViZVBsYXllcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogQHR5cGVkZWYgWVQuUGxheWVyXG4gKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3lvdXR1YmUvaWZyYW1lX2FwaV9yZWZlcmVuY2VcbiAqICovXG5cbi8qKlxuICogQHNlZSBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS95b3V0dWJlL2lmcmFtZV9hcGlfcmVmZXJlbmNlI0xvYWRpbmdfYV9WaWRlb19QbGF5ZXJcbiAqL1xudmFyIHlvdXR1YmVJZnJhbWVBUEkgPSB2b2lkIDA7XG5cbi8qKlxuICogQSBmYWN0b3J5IGZ1bmN0aW9uIHVzZWQgdG8gcHJvZHVjZSBhbiBpbnN0YW5jZSBvZiBZVC5QbGF5ZXIgYW5kIHF1ZXVlIGZ1bmN0aW9uIGNhbGxzIGFuZCBwcm94eSBldmVudHMgb2YgdGhlIHJlc3VsdGluZyBvYmplY3QuXG4gKlxuICogQHBhcmFtIG1heWJlRWxlbWVudElkIEVpdGhlciBBbiBleGlzdGluZyBZVC5QbGF5ZXIgaW5zdGFuY2UsXG4gKiB0aGUgRE9NIGVsZW1lbnQgb3IgdGhlIGlkIG9mIHRoZSBIVE1MIGVsZW1lbnQgd2hlcmUgdGhlIEFQSSB3aWxsIGluc2VydCBhbiA8aWZyYW1lPi5cbiAqIEBwYXJhbSBvcHRpb25zIFNlZSBgb3B0aW9uc2AgKElnbm9yZWQgd2hlbiB1c2luZyBhbiBleGlzdGluZyBZVC5QbGF5ZXIgaW5zdGFuY2UpLlxuICogQHBhcmFtIHN0cmljdFN0YXRlIEEgZmxhZyBkZXNpZ25hdGluZyB3aGV0aGVyIG9yIG5vdCB0byB3YWl0IGZvclxuICogYW4gYWNjZXB0YWJsZSBzdGF0ZSB3aGVuIGNhbGxpbmcgc3VwcG9ydGVkIGZ1bmN0aW9ucy4gRGVmYXVsdDogYGZhbHNlYC5cbiAqIFNlZSBgRnVuY3Rpb25TdGF0ZU1hcC5qc2AgZm9yIHN1cHBvcnRlZCBmdW5jdGlvbnMgYW5kIGFjY2VwdGFibGUgc3RhdGVzLlxuICovXG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChtYXliZUVsZW1lbnRJZCkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gIHZhciBzdHJpY3RTdGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7XG5cbiAgdmFyIGVtaXR0ZXIgPSAoMCwgX3Npc3RlcjIuZGVmYXVsdCkoKTtcblxuICBpZiAoIXlvdXR1YmVJZnJhbWVBUEkpIHtcbiAgICB5b3V0dWJlSWZyYW1lQVBJID0gKDAsIF9sb2FkWW91VHViZUlmcmFtZUFwaTIuZGVmYXVsdCkoZW1pdHRlcik7XG4gIH1cblxuICBpZiAob3B0aW9ucy5ldmVudHMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0V2ZW50IGhhbmRsZXJzIGNhbm5vdCBiZSBvdmVyd3JpdHRlbi4nKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgbWF5YmVFbGVtZW50SWQgPT09ICdzdHJpbmcnICYmICFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtYXliZUVsZW1lbnRJZCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0VsZW1lbnQgXCInICsgbWF5YmVFbGVtZW50SWQgKyAnXCIgZG9lcyBub3QgZXhpc3QuJyk7XG4gIH1cblxuICBvcHRpb25zLmV2ZW50cyA9IF9Zb3VUdWJlUGxheWVyMi5kZWZhdWx0LnByb3h5RXZlbnRzKGVtaXR0ZXIpO1xuXG4gIHZhciBwbGF5ZXJBUElSZWFkeSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgaWYgKCh0eXBlb2YgbWF5YmVFbGVtZW50SWQgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKG1heWJlRWxlbWVudElkKSkgPT09ICdvYmplY3QnICYmIG1heWJlRWxlbWVudElkLnBsYXlWaWRlbyBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICB2YXIgcGxheWVyID0gbWF5YmVFbGVtZW50SWQ7XG5cbiAgICAgIHJlc29sdmUocGxheWVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gYXN1bWUgbWF5YmVFbGVtZW50SWQgY2FuIGJlIHJlbmRlcmVkIGluc2lkZVxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByb21pc2UvY2F0Y2gtb3ItcmV0dXJuXG4gICAgICB5b3V0dWJlSWZyYW1lQVBJLnRoZW4oZnVuY3Rpb24gKFlUKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcHJvbWlzZS9wcmVmZXItYXdhaXQtdG8tdGhlblxuICAgICAgICB2YXIgcGxheWVyID0gbmV3IFlULlBsYXllcihtYXliZUVsZW1lbnRJZCwgb3B0aW9ucyk7XG5cbiAgICAgICAgZW1pdHRlci5vbigncmVhZHknLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmVzb2x2ZShwbGF5ZXIpO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIHBsYXllckFwaSA9IF9Zb3VUdWJlUGxheWVyMi5kZWZhdWx0LnByb21pc2lmeVBsYXllcihwbGF5ZXJBUElSZWFkeSwgc3RyaWN0U3RhdGUpO1xuXG4gIHBsYXllckFwaS5vbiA9IGVtaXR0ZXIub247XG4gIHBsYXllckFwaS5vZmYgPSBlbWl0dGVyLm9mZjtcblxuICByZXR1cm4gcGxheWVyQXBpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX3R5cGVvZiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwib2JqIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfc2lzdGVyIiwicmVxdWlyZSIsIl9zaXN0ZXIyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9sb2FkWW91VHViZUlmcmFtZUFwaSIsIl9sb2FkWW91VHViZUlmcmFtZUFwaTIiLCJfWW91VHViZVBsYXllciIsIl9Zb3VUdWJlUGxheWVyMiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwieW91dHViZUlmcmFtZUFQSSIsIm1heWJlRWxlbWVudElkIiwib3B0aW9ucyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInN0cmljdFN0YXRlIiwiZW1pdHRlciIsImV2ZW50cyIsIkVycm9yIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInByb3h5RXZlbnRzIiwicGxheWVyQVBJUmVhZHkiLCJQcm9taXNlIiwicmVzb2x2ZSIsInBsYXlWaWRlbyIsIkZ1bmN0aW9uIiwicGxheWVyIiwidGhlbiIsIllUIiwiUGxheWVyIiwib24iLCJwbGF5ZXJBcGkiLCJwcm9taXNpZnlQbGF5ZXIiLCJvZmYiLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/dist/loadYouTubeIframeApi.js":
/*!******************************************************************!*\
  !*** ./node_modules/youtube-player/dist/loadYouTubeIframeApi.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _loadScript = __webpack_require__(/*! load-script */ \"(ssr)/./node_modules/load-script/index.js\");\nvar _loadScript2 = _interopRequireDefault(_loadScript);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nexports[\"default\"] = function(emitter) {\n    /**\n   * A promise that is resolved when window.onYouTubeIframeAPIReady is called.\n   * The promise is resolved with a reference to window.YT object.\n   */ var iframeAPIReady = new Promise(function(resolve) {\n        if (window.YT && window.YT.Player && window.YT.Player instanceof Function) {\n            resolve(window.YT);\n            return;\n        } else {\n            var protocol = window.location.protocol === \"http:\" ? \"http:\" : \"https:\";\n            (0, _loadScript2.default)(protocol + \"//www.youtube.com/iframe_api\", function(error) {\n                if (error) {\n                    emitter.trigger(\"error\", error);\n                }\n            });\n        }\n        var previous = window.onYouTubeIframeAPIReady;\n        // The API will call this function when page has finished downloading\n        // the JavaScript for the player API.\n        window.onYouTubeIframeAPIReady = function() {\n            if (previous) {\n                previous();\n            }\n            resolve(window.YT);\n        };\n    });\n    return iframeAPIReady;\n};\nmodule.exports = exports[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9sb2FkWW91VHViZUlmcmFtZUFwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFFRixJQUFJQyxjQUFjQyxtQkFBT0EsQ0FBQztBQUUxQixJQUFJQyxlQUFlQyx1QkFBdUJIO0FBRTFDLFNBQVNHLHVCQUF1QkMsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlDLFVBQVUsR0FBR0QsTUFBTTtRQUFFRSxTQUFTRjtJQUFJO0FBQUc7QUFFOUZOLGtCQUFlLEdBQUcsU0FBVVMsT0FBTztJQUNqQzs7O0dBR0MsR0FDRCxJQUFJQyxpQkFBaUIsSUFBSUMsUUFBUSxTQUFVQyxPQUFPO1FBQ2hELElBQUlDLE9BQU9DLEVBQUUsSUFBSUQsT0FBT0MsRUFBRSxDQUFDQyxNQUFNLElBQUlGLE9BQU9DLEVBQUUsQ0FBQ0MsTUFBTSxZQUFZQyxVQUFVO1lBQ3pFSixRQUFRQyxPQUFPQyxFQUFFO1lBRWpCO1FBQ0YsT0FBTztZQUNMLElBQUlHLFdBQVdKLE9BQU9LLFFBQVEsQ0FBQ0QsUUFBUSxLQUFLLFVBQVUsVUFBVTtZQUUvRCxJQUFHYixhQUFhSSxPQUFPLEVBQUVTLFdBQVcsZ0NBQWdDLFNBQVVFLEtBQUs7Z0JBQ2xGLElBQUlBLE9BQU87b0JBQ1RWLFFBQVFXLE9BQU8sQ0FBQyxTQUFTRDtnQkFDM0I7WUFDRjtRQUNGO1FBRUEsSUFBSUUsV0FBV1IsT0FBT1MsdUJBQXVCO1FBRTdDLHFFQUFxRTtRQUNyRSxxQ0FBcUM7UUFDckNULE9BQU9TLHVCQUF1QixHQUFHO1lBQy9CLElBQUlELFVBQVU7Z0JBQ1pBO1lBQ0Y7WUFFQVQsUUFBUUMsT0FBT0MsRUFBRTtRQUNuQjtJQUNGO0lBRUEsT0FBT0o7QUFDVDtBQUVBYSxPQUFPdkIsT0FBTyxHQUFHQSxPQUFPLENBQUMsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL21pdHJhbWVkaWFfYWR2ZXJ0aXNpbmcvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvZGlzdC9sb2FkWW91VHViZUlmcmFtZUFwaS5qcz9iYzM0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9sb2FkU2NyaXB0ID0gcmVxdWlyZSgnbG9hZC1zY3JpcHQnKTtcblxudmFyIF9sb2FkU2NyaXB0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2xvYWRTY3JpcHQpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoZW1pdHRlcikge1xuICAvKipcbiAgICogQSBwcm9taXNlIHRoYXQgaXMgcmVzb2x2ZWQgd2hlbiB3aW5kb3cub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkgaXMgY2FsbGVkLlxuICAgKiBUaGUgcHJvbWlzZSBpcyByZXNvbHZlZCB3aXRoIGEgcmVmZXJlbmNlIHRvIHdpbmRvdy5ZVCBvYmplY3QuXG4gICAqL1xuICB2YXIgaWZyYW1lQVBJUmVhZHkgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgIGlmICh3aW5kb3cuWVQgJiYgd2luZG93LllULlBsYXllciAmJiB3aW5kb3cuWVQuUGxheWVyIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHJlc29sdmUod2luZG93LllUKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJvdG9jb2wgPSB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwOicgPyAnaHR0cDonIDogJ2h0dHBzOic7XG5cbiAgICAgICgwLCBfbG9hZFNjcmlwdDIuZGVmYXVsdCkocHJvdG9jb2wgKyAnLy93d3cueW91dHViZS5jb20vaWZyYW1lX2FwaScsIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICBlbWl0dGVyLnRyaWdnZXIoJ2Vycm9yJywgZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB2YXIgcHJldmlvdXMgPSB3aW5kb3cub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHk7XG5cbiAgICAvLyBUaGUgQVBJIHdpbGwgY2FsbCB0aGlzIGZ1bmN0aW9uIHdoZW4gcGFnZSBoYXMgZmluaXNoZWQgZG93bmxvYWRpbmdcbiAgICAvLyB0aGUgSmF2YVNjcmlwdCBmb3IgdGhlIHBsYXllciBBUEkuXG4gICAgd2luZG93Lm9uWW91VHViZUlmcmFtZUFQSVJlYWR5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByZXZpb3VzKSB7XG4gICAgICAgIHByZXZpb3VzKCk7XG4gICAgICB9XG5cbiAgICAgIHJlc29sdmUod2luZG93LllUKTtcbiAgICB9O1xuICB9KTtcblxuICByZXR1cm4gaWZyYW1lQVBJUmVhZHk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfbG9hZFNjcmlwdCIsInJlcXVpcmUiLCJfbG9hZFNjcmlwdDIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJlbWl0dGVyIiwiaWZyYW1lQVBJUmVhZHkiLCJQcm9taXNlIiwicmVzb2x2ZSIsIndpbmRvdyIsIllUIiwiUGxheWVyIiwiRnVuY3Rpb24iLCJwcm90b2NvbCIsImxvY2F0aW9uIiwiZXJyb3IiLCJ0cmlnZ2VyIiwicHJldmlvdXMiLCJvbllvdVR1YmVJZnJhbWVBUElSZWFkeSIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/dist/loadYouTubeIframeApi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/debug/src/browser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/debug/src/browser.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */ \nexports = module.exports = __webpack_require__(/*! ./debug */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = \"undefined\" != typeof chrome && \"undefined\" != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */ exports.colors = [\n    \"lightseagreen\",\n    \"forestgreen\",\n    \"goldenrod\",\n    \"dodgerblue\",\n    \"darkorchid\",\n    \"crimson\"\n];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */ function useColors() {\n    // NB: In an Electron preload script, document will be defined but not fully\n    // initialized. Since we know we're in Chrome, we'll just detect this case\n    // explicitly\n    if (false) {}\n    // is webkit? http://stackoverflow.com/a/16459606/376773\n    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n    return typeof document !== \"undefined\" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n     false && (0) || // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n    typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */ exports.formatters.j = function(v) {\n    try {\n        return JSON.stringify(v);\n    } catch (err) {\n        return \"[UnexpectedJSONParseError]: \" + err.message;\n    }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */ function formatArgs(args) {\n    var useColors = this.useColors;\n    args[0] = (useColors ? \"%c\" : \"\") + this.namespace + (useColors ? \" %c\" : \" \") + args[0] + (useColors ? \"%c \" : \" \") + \"+\" + exports.humanize(this.diff);\n    if (!useColors) return;\n    var c = \"color: \" + this.color;\n    args.splice(1, 0, c, \"color: inherit\");\n    // the final \"%c\" is somewhat tricky, because there could be other\n    // arguments passed either before or after the %c, so we need to\n    // figure out the correct index to insert the CSS into\n    var index = 0;\n    var lastC = 0;\n    args[0].replace(/%[a-zA-Z%]/g, function(match) {\n        if (\"%%\" === match) return;\n        index++;\n        if (\"%c\" === match) {\n            // we only are interested in the *last* %c\n            // (the user may have provided their own)\n            lastC = index;\n        }\n    });\n    args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */ function log() {\n    // this hackery is required for IE8/9, where\n    // the `console.log` function doesn't have 'apply'\n    return \"object\" === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */ function save(namespaces) {\n    try {\n        if (null == namespaces) {\n            exports.storage.removeItem(\"debug\");\n        } else {\n            exports.storage.debug = namespaces;\n        }\n    } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */ function load() {\n    var r;\n    try {\n        r = exports.storage.debug;\n    } catch (e) {}\n    // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n    if (!r && typeof process !== \"undefined\" && \"env\" in process) {\n        r = process.env.DEBUG;\n    }\n    return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */ exports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */ function localstorage() {\n    try {\n        return window.localStorage;\n    } catch (e) {}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/debug/src/browser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/debug/src/debug.js":
/*!*********************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/debug/src/debug.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */ \nexports = module.exports = createDebug.debug = createDebug[\"default\"] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"(ssr)/./node_modules/youtube-player/node_modules/ms/index.js\");\n/**\n * The currently active debug mode names, and names to skip.\n */ exports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */ exports.formatters = {};\n/**\n * Previous log timestamp.\n */ var prevTime;\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */ function selectColor(namespace) {\n    var hash = 0, i;\n    for(i in namespace){\n        hash = (hash << 5) - hash + namespace.charCodeAt(i);\n        hash |= 0; // Convert to 32bit integer\n    }\n    return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */ function createDebug(namespace) {\n    function debug() {\n        // disabled?\n        if (!debug.enabled) return;\n        var self = debug;\n        // set `diff` timestamp\n        var curr = +new Date();\n        var ms = curr - (prevTime || curr);\n        self.diff = ms;\n        self.prev = prevTime;\n        self.curr = curr;\n        prevTime = curr;\n        // turn the `arguments` into a proper Array\n        var args = new Array(arguments.length);\n        for(var i = 0; i < args.length; i++){\n            args[i] = arguments[i];\n        }\n        args[0] = exports.coerce(args[0]);\n        if (\"string\" !== typeof args[0]) {\n            // anything else let's inspect with %O\n            args.unshift(\"%O\");\n        }\n        // apply any `formatters` transformations\n        var index = 0;\n        args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n            // if we encounter an escaped % then don't increase the array index\n            if (match === \"%%\") return match;\n            index++;\n            var formatter = exports.formatters[format];\n            if (\"function\" === typeof formatter) {\n                var val = args[index];\n                match = formatter.call(self, val);\n                // now we need to remove `args[index]` since it's inlined in the `format`\n                args.splice(index, 1);\n                index--;\n            }\n            return match;\n        });\n        // apply env-specific formatting (colors, etc.)\n        exports.formatArgs.call(self, args);\n        var logFn = debug.log || exports.log || console.log.bind(console);\n        logFn.apply(self, args);\n    }\n    debug.namespace = namespace;\n    debug.enabled = exports.enabled(namespace);\n    debug.useColors = exports.useColors();\n    debug.color = selectColor(namespace);\n    // env-specific initialization logic for debug instances\n    if (\"function\" === typeof exports.init) {\n        exports.init(debug);\n    }\n    return debug;\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */ function enable(namespaces) {\n    exports.save(namespaces);\n    exports.names = [];\n    exports.skips = [];\n    var split = (typeof namespaces === \"string\" ? namespaces : \"\").split(/[\\s,]+/);\n    var len = split.length;\n    for(var i = 0; i < len; i++){\n        if (!split[i]) continue; // ignore empty strings\n        namespaces = split[i].replace(/\\*/g, \".*?\");\n        if (namespaces[0] === \"-\") {\n            exports.skips.push(new RegExp(\"^\" + namespaces.substr(1) + \"$\"));\n        } else {\n            exports.names.push(new RegExp(\"^\" + namespaces + \"$\"));\n        }\n    }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */ function disable() {\n    exports.enable(\"\");\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */ function enabled(name) {\n    var i, len;\n    for(i = 0, len = exports.skips.length; i < len; i++){\n        if (exports.skips[i].test(name)) {\n            return false;\n        }\n    }\n    for(i = 0, len = exports.names.length; i < len; i++){\n        if (exports.names[i].test(name)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */ function coerce(val) {\n    if (val instanceof Error) return val.stack || val.message;\n    return val;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/debug/src/debug.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/debug/src/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/debug/src/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */ \nif (typeof process !== \"undefined\" && process.type === \"renderer\") {\n    module.exports = __webpack_require__(/*! ./browser.js */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/browser.js\");\n} else {\n    module.exports = __webpack_require__(/*! ./node.js */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/node.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0M7QUFFRCxJQUFJLE9BQU9BLFlBQVksZUFBZUEsUUFBUUMsSUFBSSxLQUFLLFlBQVk7SUFDakVDLGlJQUF5QjtBQUMzQixPQUFPO0lBQ0xBLDJIQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL21pdHJhbWVkaWFfYWR2ZXJ0aXNpbmcvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9pbmRleC5qcz80NTFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGV0ZWN0IEVsZWN0cm9uIHJlbmRlcmVyIHByb2Nlc3MsIHdoaWNoIGlzIG5vZGUsIGJ1dCB3ZSBzaG91bGRcbiAqIHRyZWF0IGFzIGEgYnJvd3Nlci5cbiAqL1xuXG5pZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vYnJvd3Nlci5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL25vZGUuanMnKTtcbn1cbiJdLCJuYW1lcyI6WyJwcm9jZXNzIiwidHlwZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/debug/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/debug/src/node.js":
/*!********************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/debug/src/node.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * Module dependencies.\n */ \nvar tty = __webpack_require__(/*! tty */ \"tty\");\nvar util = __webpack_require__(/*! util */ \"util\");\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */ exports = module.exports = __webpack_require__(/*! ./debug */ \"(ssr)/./node_modules/youtube-player/node_modules/debug/src/debug.js\");\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */ exports.colors = [\n    6,\n    2,\n    3,\n    4,\n    5,\n    1\n];\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */ exports.inspectOpts = Object.keys(process.env).filter(function(key) {\n    return /^debug_/i.test(key);\n}).reduce(function(obj, key) {\n    // camel-case\n    var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function(_, k) {\n        return k.toUpperCase();\n    });\n    // coerce string value into JS value\n    var val = process.env[key];\n    if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n    else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n    else if (val === \"null\") val = null;\n    else val = Number(val);\n    obj[prop] = val;\n    return obj;\n}, {});\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */ var fd = parseInt(process.env.DEBUG_FD, 10) || 2;\nif (1 !== fd && 2 !== fd) {\n    util.deprecate(function() {}, \"except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)\")();\n}\nvar stream = 1 === fd ? process.stdout : 2 === fd ? process.stderr : createWritableStdioStream(fd);\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */ function useColors() {\n    return \"colors\" in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(fd);\n}\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */ exports.formatters.o = function(v) {\n    this.inspectOpts.colors = this.useColors;\n    return util.inspect(v, this.inspectOpts).split(\"\\n\").map(function(str) {\n        return str.trim();\n    }).join(\" \");\n};\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */ exports.formatters.O = function(v) {\n    this.inspectOpts.colors = this.useColors;\n    return util.inspect(v, this.inspectOpts);\n};\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */ function formatArgs(args) {\n    var name = this.namespace;\n    var useColors = this.useColors;\n    if (useColors) {\n        var c = this.color;\n        var prefix = \"  \\x1b[3\" + c + \";1m\" + name + \" \" + \"\\x1b[0m\";\n        args[0] = prefix + args[0].split(\"\\n\").join(\"\\n\" + prefix);\n        args.push(\"\\x1b[3\" + c + \"m+\" + exports.humanize(this.diff) + \"\\x1b[0m\");\n    } else {\n        args[0] = new Date().toUTCString() + \" \" + name + \" \" + args[0];\n    }\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */ function log() {\n    return stream.write(util.format.apply(util, arguments) + \"\\n\");\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */ function save(namespaces) {\n    if (null == namespaces) {\n        // If you set a process.env field to null or undefined, it gets cast to the\n        // string 'null' or 'undefined'. Just delete instead.\n        delete process.env.DEBUG;\n    } else {\n        process.env.DEBUG = namespaces;\n    }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */ function load() {\n    return process.env.DEBUG;\n}\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */ function createWritableStdioStream(fd) {\n    var stream;\n    var tty_wrap = process.binding(\"tty_wrap\");\n    // Note stream._type is used for test-module-load-list.js\n    switch(tty_wrap.guessHandleType(fd)){\n        case \"TTY\":\n            stream = new tty.WriteStream(fd);\n            stream._type = \"tty\";\n            // Hack to have stream not keep the event loop alive.\n            // See https://github.com/joyent/node/issues/1726\n            if (stream._handle && stream._handle.unref) {\n                stream._handle.unref();\n            }\n            break;\n        case \"FILE\":\n            var fs = __webpack_require__(/*! fs */ \"fs\");\n            stream = new fs.SyncWriteStream(fd, {\n                autoClose: false\n            });\n            stream._type = \"fs\";\n            break;\n        case \"PIPE\":\n        case \"TCP\":\n            var net = __webpack_require__(/*! net */ \"net\");\n            stream = new net.Socket({\n                fd: fd,\n                readable: false,\n                writable: true\n            });\n            // FIXME Should probably have an option in net.Socket to create a\n            // stream from an existing fd which is writable only. But for now\n            // we'll just add this hack and set the `readable` member to false.\n            // Test: ./node test/fixtures/echo.js < /etc/passwd\n            stream.readable = false;\n            stream.read = null;\n            stream._type = \"pipe\";\n            // FIXME Hack to have stream not keep the event loop alive.\n            // See https://github.com/joyent/node/issues/1726\n            if (stream._handle && stream._handle.unref) {\n                stream._handle.unref();\n            }\n            break;\n        default:\n            // Probably an error on in uv_guess_handle()\n            throw new Error(\"Implement me. Unknown stream file type!\");\n    }\n    // For supporting legacy API we put the FD here.\n    stream.fd = fd;\n    stream._isStdio = true;\n    return stream;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */ function init(debug) {\n    debug.inspectOpts = {};\n    var keys = Object.keys(exports.inspectOpts);\n    for(var i = 0; i < keys.length; i++){\n        debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n    }\n}\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */ exports.enable(load());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/debug/src/node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/youtube-player/node_modules/ms/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/youtube-player/node_modules/ms/index.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("/**\n * Helpers.\n */ \nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */ module.exports = function(val, options) {\n    options = options || {};\n    var type = typeof val;\n    if (type === \"string\" && val.length > 0) {\n        return parse(val);\n    } else if (type === \"number\" && isNaN(val) === false) {\n        return options.long ? fmtLong(val) : fmtShort(val);\n    }\n    throw new Error(\"val is not a non-empty string or a valid number. val=\" + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */ function parse(str) {\n    str = String(str);\n    if (str.length > 100) {\n        return;\n    }\n    var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n    if (!match) {\n        return;\n    }\n    var n = parseFloat(match[1]);\n    var type = (match[2] || \"ms\").toLowerCase();\n    switch(type){\n        case \"years\":\n        case \"year\":\n        case \"yrs\":\n        case \"yr\":\n        case \"y\":\n            return n * y;\n        case \"days\":\n        case \"day\":\n        case \"d\":\n            return n * d;\n        case \"hours\":\n        case \"hour\":\n        case \"hrs\":\n        case \"hr\":\n        case \"h\":\n            return n * h;\n        case \"minutes\":\n        case \"minute\":\n        case \"mins\":\n        case \"min\":\n        case \"m\":\n            return n * m;\n        case \"seconds\":\n        case \"second\":\n        case \"secs\":\n        case \"sec\":\n        case \"s\":\n            return n * s;\n        case \"milliseconds\":\n        case \"millisecond\":\n        case \"msecs\":\n        case \"msec\":\n        case \"ms\":\n            return n;\n        default:\n            return undefined;\n    }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */ function fmtShort(ms) {\n    if (ms >= d) {\n        return Math.round(ms / d) + \"d\";\n    }\n    if (ms >= h) {\n        return Math.round(ms / h) + \"h\";\n    }\n    if (ms >= m) {\n        return Math.round(ms / m) + \"m\";\n    }\n    if (ms >= s) {\n        return Math.round(ms / s) + \"s\";\n    }\n    return ms + \"ms\";\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */ function fmtLong(ms) {\n    return plural(ms, d, \"day\") || plural(ms, h, \"hour\") || plural(ms, m, \"minute\") || plural(ms, s, \"second\") || ms + \" ms\";\n}\n/**\n * Pluralization helper.\n */ function plural(ms, n, name) {\n    if (ms < n) {\n        return;\n    }\n    if (ms < n * 1.5) {\n        return Math.floor(ms / n) + \" \" + name;\n    }\n    return Math.ceil(ms / n) + \" \" + name + \"s\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveW91dHViZS1wbGF5ZXIvbm9kZV9tb2R1bGVzL21zL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOztDQUVDO0FBRUQsSUFBSUEsSUFBSTtBQUNSLElBQUlDLElBQUlELElBQUk7QUFDWixJQUFJRSxJQUFJRCxJQUFJO0FBQ1osSUFBSUUsSUFBSUQsSUFBSTtBQUNaLElBQUlFLElBQUlELElBQUk7QUFFWjs7Ozs7Ozs7Ozs7O0NBWUMsR0FFREUsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLEdBQUcsRUFBRUMsT0FBTztJQUNwQ0EsVUFBVUEsV0FBVyxDQUFDO0lBQ3RCLElBQUlDLE9BQU8sT0FBT0Y7SUFDbEIsSUFBSUUsU0FBUyxZQUFZRixJQUFJRyxNQUFNLEdBQUcsR0FBRztRQUN2QyxPQUFPQyxNQUFNSjtJQUNmLE9BQU8sSUFBSUUsU0FBUyxZQUFZRyxNQUFNTCxTQUFTLE9BQU87UUFDcEQsT0FBT0MsUUFBUUssSUFBSSxHQUFHQyxRQUFRUCxPQUFPUSxTQUFTUjtJQUNoRDtJQUNBLE1BQU0sSUFBSVMsTUFDUiwwREFDRUMsS0FBS0MsU0FBUyxDQUFDWDtBQUVyQjtBQUVBOzs7Ozs7Q0FNQyxHQUVELFNBQVNJLE1BQU1RLEdBQUc7SUFDaEJBLE1BQU1DLE9BQU9EO0lBQ2IsSUFBSUEsSUFBSVQsTUFBTSxHQUFHLEtBQUs7UUFDcEI7SUFDRjtJQUNBLElBQUlXLFFBQVEsd0hBQXdIQyxJQUFJLENBQ3RJSDtJQUVGLElBQUksQ0FBQ0UsT0FBTztRQUNWO0lBQ0Y7SUFDQSxJQUFJRSxJQUFJQyxXQUFXSCxLQUFLLENBQUMsRUFBRTtJQUMzQixJQUFJWixPQUFPLENBQUNZLEtBQUssQ0FBQyxFQUFFLElBQUksSUFBRyxFQUFHSSxXQUFXO0lBQ3pDLE9BQVFoQjtRQUNOLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT2MsSUFBSW5CO1FBQ2IsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT21CLElBQUlwQjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT29CLElBQUlyQjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3FCLElBQUl0QjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3NCLElBQUl2QjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3VCO1FBQ1Q7WUFDRSxPQUFPRztJQUNYO0FBQ0Y7QUFFQTs7Ozs7O0NBTUMsR0FFRCxTQUFTWCxTQUFTWSxFQUFFO0lBQ2xCLElBQUlBLE1BQU14QixHQUFHO1FBQ1gsT0FBT3lCLEtBQUtDLEtBQUssQ0FBQ0YsS0FBS3hCLEtBQUs7SUFDOUI7SUFDQSxJQUFJd0IsTUFBTXpCLEdBQUc7UUFDWCxPQUFPMEIsS0FBS0MsS0FBSyxDQUFDRixLQUFLekIsS0FBSztJQUM5QjtJQUNBLElBQUl5QixNQUFNMUIsR0FBRztRQUNYLE9BQU8yQixLQUFLQyxLQUFLLENBQUNGLEtBQUsxQixLQUFLO0lBQzlCO0lBQ0EsSUFBSTBCLE1BQU0zQixHQUFHO1FBQ1gsT0FBTzRCLEtBQUtDLEtBQUssQ0FBQ0YsS0FBSzNCLEtBQUs7SUFDOUI7SUFDQSxPQUFPMkIsS0FBSztBQUNkO0FBRUE7Ozs7OztDQU1DLEdBRUQsU0FBU2IsUUFBUWEsRUFBRTtJQUNqQixPQUFPRyxPQUFPSCxJQUFJeEIsR0FBRyxVQUNuQjJCLE9BQU9ILElBQUl6QixHQUFHLFdBQ2Q0QixPQUFPSCxJQUFJMUIsR0FBRyxhQUNkNkIsT0FBT0gsSUFBSTNCLEdBQUcsYUFDZDJCLEtBQUs7QUFDVDtBQUVBOztDQUVDLEdBRUQsU0FBU0csT0FBT0gsRUFBRSxFQUFFSixDQUFDLEVBQUVRLElBQUk7SUFDekIsSUFBSUosS0FBS0osR0FBRztRQUNWO0lBQ0Y7SUFDQSxJQUFJSSxLQUFLSixJQUFJLEtBQUs7UUFDaEIsT0FBT0ssS0FBS0ksS0FBSyxDQUFDTCxLQUFLSixLQUFLLE1BQU1RO0lBQ3BDO0lBQ0EsT0FBT0gsS0FBS0ssSUFBSSxDQUFDTixLQUFLSixLQUFLLE1BQU1RLE9BQU87QUFDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taXRyYW1lZGlhX2FkdmVydGlzaW5nLy4vbm9kZV9tb2R1bGVzL3lvdXR1YmUtcGxheWVyL25vZGVfbW9kdWxlcy9tcy9pbmRleC5qcz9mZmI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSGVscGVycy5cbiAqL1xuXG52YXIgcyA9IDEwMDA7XG52YXIgbSA9IHMgKiA2MDtcbnZhciBoID0gbSAqIDYwO1xudmFyIGQgPSBoICogMjQ7XG52YXIgeSA9IGQgKiAzNjUuMjU7XG5cbi8qKlxuICogUGFyc2Ugb3IgZm9ybWF0IHRoZSBnaXZlbiBgdmFsYC5cbiAqXG4gKiBPcHRpb25zOlxuICpcbiAqICAtIGBsb25nYCB2ZXJib3NlIGZvcm1hdHRpbmcgW2ZhbHNlXVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfE51bWJlcn0gdmFsXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAdGhyb3dzIHtFcnJvcn0gdGhyb3cgYW4gZXJyb3IgaWYgdmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSBudW1iZXJcbiAqIEByZXR1cm4ge1N0cmluZ3xOdW1iZXJ9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odmFsLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWw7XG4gIGlmICh0eXBlID09PSAnc3RyaW5nJyAmJiB2YWwubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBwYXJzZSh2YWwpO1xuICB9IGVsc2UgaWYgKHR5cGUgPT09ICdudW1iZXInICYmIGlzTmFOKHZhbCkgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMubG9uZyA/IGZtdExvbmcodmFsKSA6IGZtdFNob3J0KHZhbCk7XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKFxuICAgICd2YWwgaXMgbm90IGEgbm9uLWVtcHR5IHN0cmluZyBvciBhIHZhbGlkIG51bWJlci4gdmFsPScgK1xuICAgICAgSlNPTi5zdHJpbmdpZnkodmFsKVxuICApO1xufTtcblxuLyoqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gYHN0cmAgYW5kIHJldHVybiBtaWxsaXNlY29uZHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyc2Uoc3RyKSB7XG4gIHN0ciA9IFN0cmluZyhzdHIpO1xuICBpZiAoc3RyLmxlbmd0aCA+IDEwMCkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgbWF0Y2ggPSAvXigoPzpcXGQrKT9cXC4/XFxkKykgKihtaWxsaXNlY29uZHM/fG1zZWNzP3xtc3xzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHllYXJzP3x5cnM/fHkpPyQvaS5leGVjKFxuICAgIHN0clxuICApO1xuICBpZiAoIW1hdGNoKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBuID0gcGFyc2VGbG9hdChtYXRjaFsxXSk7XG4gIHZhciB0eXBlID0gKG1hdGNoWzJdIHx8ICdtcycpLnRvTG93ZXJDYXNlKCk7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ3llYXJzJzpcbiAgICBjYXNlICd5ZWFyJzpcbiAgICBjYXNlICd5cnMnOlxuICAgIGNhc2UgJ3lyJzpcbiAgICBjYXNlICd5JzpcbiAgICAgIHJldHVybiBuICogeTtcbiAgICBjYXNlICdkYXlzJzpcbiAgICBjYXNlICdkYXknOlxuICAgIGNhc2UgJ2QnOlxuICAgICAgcmV0dXJuIG4gKiBkO1xuICAgIGNhc2UgJ2hvdXJzJzpcbiAgICBjYXNlICdob3VyJzpcbiAgICBjYXNlICdocnMnOlxuICAgIGNhc2UgJ2hyJzpcbiAgICBjYXNlICdoJzpcbiAgICAgIHJldHVybiBuICogaDtcbiAgICBjYXNlICdtaW51dGVzJzpcbiAgICBjYXNlICdtaW51dGUnOlxuICAgIGNhc2UgJ21pbnMnOlxuICAgIGNhc2UgJ21pbic6XG4gICAgY2FzZSAnbSc6XG4gICAgICByZXR1cm4gbiAqIG07XG4gICAgY2FzZSAnc2Vjb25kcyc6XG4gICAgY2FzZSAnc2Vjb25kJzpcbiAgICBjYXNlICdzZWNzJzpcbiAgICBjYXNlICdzZWMnOlxuICAgIGNhc2UgJ3MnOlxuICAgICAgcmV0dXJuIG4gKiBzO1xuICAgIGNhc2UgJ21pbGxpc2Vjb25kcyc6XG4gICAgY2FzZSAnbWlsbGlzZWNvbmQnOlxuICAgIGNhc2UgJ21zZWNzJzpcbiAgICBjYXNlICdtc2VjJzpcbiAgICBjYXNlICdtcyc6XG4gICAgICByZXR1cm4gbjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG4vKipcbiAqIFNob3J0IGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdFNob3J0KG1zKSB7XG4gIGlmIChtcyA+PSBkKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBkKSArICdkJztcbiAgfVxuICBpZiAobXMgPj0gaCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gaCkgKyAnaCc7XG4gIH1cbiAgaWYgKG1zID49IG0pIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIG0pICsgJ20nO1xuICB9XG4gIGlmIChtcyA+PSBzKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBzKSArICdzJztcbiAgfVxuICByZXR1cm4gbXMgKyAnbXMnO1xufVxuXG4vKipcbiAqIExvbmcgZm9ybWF0IGZvciBgbXNgLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBtc1xuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZm10TG9uZyhtcykge1xuICByZXR1cm4gcGx1cmFsKG1zLCBkLCAnZGF5JykgfHxcbiAgICBwbHVyYWwobXMsIGgsICdob3VyJykgfHxcbiAgICBwbHVyYWwobXMsIG0sICdtaW51dGUnKSB8fFxuICAgIHBsdXJhbChtcywgcywgJ3NlY29uZCcpIHx8XG4gICAgbXMgKyAnIG1zJztcbn1cblxuLyoqXG4gKiBQbHVyYWxpemF0aW9uIGhlbHBlci5cbiAqL1xuXG5mdW5jdGlvbiBwbHVyYWwobXMsIG4sIG5hbWUpIHtcbiAgaWYgKG1zIDwgbikge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAobXMgPCBuICogMS41KSB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IobXMgLyBuKSArICcgJyArIG5hbWU7XG4gIH1cbiAgcmV0dXJuIE1hdGguY2VpbChtcyAvIG4pICsgJyAnICsgbmFtZSArICdzJztcbn1cbiJdLCJuYW1lcyI6WyJzIiwibSIsImgiLCJkIiwieSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWwiLCJvcHRpb25zIiwidHlwZSIsImxlbmd0aCIsInBhcnNlIiwiaXNOYU4iLCJsb25nIiwiZm10TG9uZyIsImZtdFNob3J0IiwiRXJyb3IiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RyIiwiU3RyaW5nIiwibWF0Y2giLCJleGVjIiwibiIsInBhcnNlRmxvYXQiLCJ0b0xvd2VyQ2FzZSIsInVuZGVmaW5lZCIsIm1zIiwiTWF0aCIsInJvdW5kIiwicGx1cmFsIiwibmFtZSIsImZsb29yIiwiY2VpbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/youtube-player/node_modules/ms/index.js\n");

/***/ })

};
;